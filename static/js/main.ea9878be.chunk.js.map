{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","className","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","scaleNames","c","f","toCelsius","fahrenheit","toFahrenheit","celsius","tryConvert","temperature","convert","input","parseFloat","Number","isNaN","output","Math","round","toString","BoilingVerdict","props","TemperatureInput","handleChange","bind","e","this","onTemperatureChange","value","scale","onChange","React","Component","Calculator","handleCelsiusChange","handleFahrenheitChange","state","setState"],"mappings":"qOAAe,G,MAAA,IAA0B,kC,eCwB1BA,MArBf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,8CADP,0BAGA,mBACEH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,+BCCOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,IACA,IAAMc,EAAa,CACjBC,EAAG,UACHC,EAAG,cAGL,SAASC,EAAUC,GACjB,OAA2B,GAAnBA,EAAa,IAAU,EAGjC,SAASC,EAAaC,GACpB,OAAkB,EAAVA,EAAc,EAAK,GAG7B,SAASC,EAAWC,EAAaC,GAC/B,IAAMC,EAAQC,WAAWH,GACzB,GAAII,OAAOC,MAAMH,GACf,MAAO,GAET,IAAMI,EAASL,EAAQC,GAEvB,OADgBK,KAAKC,MAAe,IAATF,GAAiB,KAC7BG,WAGjB,SAASC,EAAeC,GACtB,OAAIA,EAAMb,SAAW,IACZ,sDAEF,0D,IAGHc,E,kDACJ,WAAYD,GAAQ,IAAD,8BACjB,cAAMA,IACDE,aAAe,EAAKA,aAAaC,KAAlB,gBAFH,E,gDAKnB,SAAaC,GACXC,KAAKL,MAAMM,oBAAoBF,EAAEvC,OAAO0C,S,oBAG1C,WACE,IAAMlB,EAAcgB,KAAKL,MAAMX,YACzBmB,EAAQH,KAAKL,MAAMQ,MACzB,OACE,gCACE,uDAA0B3B,EAAW2B,GAArC,OACA,uBAAOD,MAAOlB,EAAYoB,SAAUJ,KAAKH,sB,GAhBlBQ,IAAMC,WAsB/BC,E,kDACJ,WAAYZ,GAAQ,IAAD,8BACjB,cAAMA,IACDa,oBAAsB,EAAKA,oBAAoBV,KAAzB,gBAC3B,EAAKW,uBAAyB,EAAKA,uBAAuBX,KAA5B,gBAC9B,EAAKY,MAAQ,CAAC1B,YAAa,GAAImB,MAAO,KAJrB,E,uDAOnB,SAAoBnB,GAClBgB,KAAKW,SAAS,CAACR,MAAO,IAAKnB,kB,oCAG7B,SAAuBA,GACrBgB,KAAKW,SAAS,CAACR,MAAO,IAAKnB,kB,oBAG7B,WACE,IAAMmB,EAAQH,KAAKU,MAAMP,MACnBnB,EAAcgB,KAAKU,MAAM1B,YACzBF,EAAoB,MAAVqB,EAAgBpB,EAAWC,EAAaL,GAAaK,EAC/DJ,EAAuB,MAAVuB,EAAgBpB,EAAWC,EAAaH,GAAgBG,EAE3E,OAEE,gCACE,oBAAI7B,UAAU,OAAd,mCACA,cAAC,EAAD,CACEgD,MAAM,IACNnB,YAAaF,EACbmB,oBAAqBD,KAAKQ,sBAC5B,cAAC,EAAD,CACEL,MAAM,IACNnB,YAAaJ,EACbqB,oBAAqBD,KAAKS,yBAC5B,cAACf,EAAD,CACEZ,QAASK,WAAWL,Y,GAnCLuB,IAAMC,WAyC/BnC,IAASC,OACP,cAAC,EAAD,IACAE,SAASC,eAAe,W","file":"static/js/main.ea9878be.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\nconst scaleNames = {\n  c: 'Celsius',\n  f: 'Fahrenheit'\n};\n\nfunction toCelsius(fahrenheit) {\n  return (fahrenheit - 32) * 5 / 9;\n}\n\nfunction toFahrenheit(celsius) {\n  return (celsius * 9 / 5) + 32;\n}\n\nfunction tryConvert(temperature, convert) {\n  const input = parseFloat(temperature);\n  if (Number.isNaN(input)) {\n    return '';\n  }\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\n\nfunction BoilingVerdict(props) {\n  if (props.celsius >= 100) {\n    return <p>The water would boil.</p>;\n  }\n  return <p>The water would not boil.</p>;\n}\n\nclass TemperatureInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.props.onTemperatureChange(e.target.value);\n  }\n\n  render() {\n    const temperature = this.props.temperature;\n    const scale = this.props.scale;\n    return (\n      <div>\n        <h6>Enter temperature in {scaleNames[scale]}:</h6>\n        <input value={temperature}onChange={this.handleChange} />\n      </div>\n    );\n  }\n}\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n    this.state = {temperature: '', scale: 'c'};\n  }\n\n  handleCelsiusChange(temperature) {\n    this.setState({scale: 'c', temperature});\n  }\n\n  handleFahrenheitChange(temperature) {\n    this.setState({scale: 'f', temperature});\n  }\n\n  render() {\n    const scale = this.state.scale;\n    const temperature = this.state.temperature;\n    const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\n    const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\n\n    return (\n      \n      <div>\n        <h1 className=\"head\">Temperature Converter</h1>\n        <TemperatureInput\n          scale=\"c\"\n          temperature={celsius}\n          onTemperatureChange={this.handleCelsiusChange} />\n        <TemperatureInput\n          scale=\"f\"\n          temperature={fahrenheit}\n          onTemperatureChange={this.handleFahrenheitChange} />\n        <BoilingVerdict\n          celsius={parseFloat(celsius)} />\n      </div>\n    );\n  }\n}\n\nReactDOM.render(\n  <Calculator />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}